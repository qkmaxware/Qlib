<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="qubit_8hpp" kind="file" language="C++">
    <compoundname>qubit.hpp</compoundname>
    <includes refid="object_8hpp" local="yes">./../../general/object.hpp</includes>
    <includes refid="complex_8hpp" local="yes">./../../math/complex.hpp</includes>
    <includes refid="matrix_8hpp" local="yes">./../../math/matrix.hpp</includes>
    <includes refid="igate_8hpp" local="yes">./../gates/igate.hpp</includes>
    <includes refid="system_8hpp" local="yes">system.hpp</includes>
    <includes local="no">math.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">vector</includes>
    <includedby refid="qlib_8h" local="yes">src/core/qlib.h</includedby>
    <incdepgraph>
      <node id="1679">
        <label>limits</label>
      </node>
      <node id="1676">
        <label>./../../general/object.hpp</label>
        <link refid="object_8hpp"/>
        <childnode refid="1677" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
      </node>
      <node id="1678">
        <label>stdint.h</label>
      </node>
      <node id="1687">
        <label>stdlib.h</label>
      </node>
      <node id="1688">
        <label>./../../math/matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1689" relation="include">
        </childnode>
        <childnode refid="1690" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
      </node>
      <node id="1675">
        <label>src/core/quantum/systems/qubit.hpp</label>
        <link refid="qubit.hpp"/>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
        <childnode refid="1692" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1690" relation="include">
        </childnode>
      </node>
      <node id="1691">
        <label>./../gates/igate.hpp</label>
        <link refid="igate_8hpp"/>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1688" relation="include">
        </childnode>
      </node>
      <node id="1689">
        <label>stdexcept</label>
      </node>
      <node id="1692">
        <label>system.hpp</label>
        <link refid="system_8hpp"/>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
      </node>
      <node id="1682">
        <label>exception</label>
      </node>
      <node id="1683">
        <label>random</label>
      </node>
      <node id="1685">
        <label>./../../math/complex.hpp</label>
        <link refid="complex_8hpp"/>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
      </node>
      <node id="1690">
        <label>vector</label>
      </node>
      <node id="1681">
        <label>sstream</label>
      </node>
      <node id="1686">
        <label>math.h</label>
      </node>
      <node id="1680">
        <label>iostream</label>
      </node>
      <node id="1684">
        <label>chrono</label>
      </node>
      <node id="1677">
        <label>./types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1696">
        <label>src/runtime/main.cpp</label>
        <link refid="runtime_2main_8cpp"/>
      </node>
      <node id="1697">
        <label>src/runtime/runtime.hpp</label>
        <link refid="runtime_8hpp"/>
        <childnode refid="1698" relation="include">
        </childnode>
        <childnode refid="1696" relation="include">
        </childnode>
      </node>
      <node id="1693">
        <label>src/core/quantum/systems/qubit.hpp</label>
        <link refid="qubit.hpp"/>
        <childnode refid="1694" relation="include">
        </childnode>
      </node>
      <node id="1698">
        <label>src/runtime/qasmparser.hpp</label>
        <link refid="qasmparser_8hpp"/>
        <childnode refid="1696" relation="include">
        </childnode>
      </node>
      <node id="1695">
        <label>src/core/main.cpp</label>
        <link refid="core_2main_8cpp"/>
      </node>
      <node id="1694">
        <label>src/core/qlib.h</label>
        <link refid="qlib_8h"/>
        <childnode refid="1695" relation="include">
        </childnode>
        <childnode refid="1696" relation="include">
        </childnode>
        <childnode refid="1697" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classqlib_1_1quantum_1_1qubit" prot="public">qlib::quantum::qubit</innerclass>
    <innernamespace refid="namespaceqlib">qlib</innernamespace>
    <innernamespace refid="namespaceqlib_1_1quantum">qlib::quantum</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_QLIB_QUANTUM_QBIT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_QLIB_QUANTUM_QBIT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;./../../general/object.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;./../../math/complex.hpp&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;./../../math/matrix.hpp&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;./../gates/igate.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="system_8hpp" kindref="compound">system.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceqlib" kindref="compound">qlib</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">quantum<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classqlib_1_1quantum_1_1qubit" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classqlib_1_1quantum_1_1qubit" kindref="compound">qubit</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1quantum_1_1qsystem" kindref="compound">qsystem</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26" refid="classqlib_1_1quantum_1_1qubit_1a8f6e33dd5d0673f195360bc4b5c5442f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">qlib::math::matrix</ref><sp/><ref refid="classqlib_1_1quantum_1_1qubit_1a8f6e33dd5d0673f195360bc4b5c5442f" kindref="member">vec</ref>;</highlight></codeline>
<codeline lineno="30" refid="classqlib_1_1quantum_1_1qubit_1abb97216eead736ab87e8756b9b4c2ce9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uniform_real_distribution&lt;f32&gt;<sp/><ref refid="classqlib_1_1quantum_1_1qubit_1abb97216eead736ab87e8756b9b4c2ce9" kindref="member">distribution</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36" refid="classqlib_1_1quantum_1_1qubit_1a32ca47a6fca663c267ddbbac49b12986" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1quantum_1_1qubit_1a32ca47a6fca663c267ddbbac49b12986" kindref="member">qubit</ref>()<sp/>:<sp/>vec(2,1),<sp/>distribution(0.0,<sp/>1.0){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1quantum_1_1qubit_1a8f6e33dd5d0673f195360bc4b5c5442f" kindref="member">vec</ref>(0,0)<sp/>=<sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">qlib::math::complex</ref>(1,0);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classqlib_1_1quantum_1_1qubit_1a9c84248c8855841087687baa8b0a08c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1quantum_1_1qubit_1a9c84248c8855841087687baa8b0a08c3" kindref="member">qubit</ref>(<ref refid="classqlib_1_1math_1_1complex" kindref="compound">qlib::math::complex</ref><sp/>zero,<sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">qlib::math::complex</ref><sp/>one):<sp/>vec(2,1)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>normalization<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f32<sp/>mag<sp/>=<sp/>sqrt(zero.<ref refid="classqlib_1_1math_1_1complex_1ad1a8ab1ad95a47206e72d3a0d7be9511" kindref="member">sqrMagnitude</ref>()<sp/>+<sp/>one.<ref refid="classqlib_1_1math_1_1complex_1ad1a8ab1ad95a47206e72d3a0d7be9511" kindref="member">sqrMagnitude</ref>());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1quantum_1_1qubit_1a8f6e33dd5d0673f195360bc4b5c5442f" kindref="member">vec</ref>(0,0)<sp/>=<sp/>zero/mag;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1quantum_1_1qubit_1a8f6e33dd5d0673f195360bc4b5c5442f" kindref="member">vec</ref>(1,0)<sp/>=<sp/>one/mag;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classqlib_1_1quantum_1_1qubit_1af8eaf337ffcb95c2445ddf35189335e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref>&amp;<sp/><ref refid="classqlib_1_1quantum_1_1qubit_1af8eaf337ffcb95c2445ddf35189335e4" kindref="member">state</ref>(){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classqlib_1_1quantum_1_1qubit_1a8f6e33dd5d0673f195360bc4b5c5442f" kindref="member">vec</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classqlib_1_1quantum_1_1qubit_1ab3b0b76d5c6f0e627a742fcafbc768ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1quantum_1_1qubit_1ab3b0b76d5c6f0e627a742fcafbc768ae" kindref="member">apply</ref>(<ref refid="classqlib_1_1quantum_1_1gates_1_1igate" kindref="compound">qlib::quantum::gates::igate</ref>&amp;<sp/>gate,<sp/>std::vector&lt;u64&gt;<sp/>inputBits){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gate.<ref refid="classqlib_1_1quantum_1_1gates_1_1igate_1ac8aa56b0095a94fdd437bc55d90aec9d" kindref="member">inputs</ref>()<sp/>!=<sp/>1){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::length_error(</highlight><highlight class="stringliteral">&quot;Only<sp/>one<sp/>qubit<sp/>operators<sp/>can<sp/>be<sp/>applied<sp/>to<sp/>single<sp/>qubit<sp/>systems&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>ref<sp/>=<sp/>this-&gt;<ref refid="classqlib_1_1quantum_1_1qubit_1a8f6e33dd5d0673f195360bc4b5c5442f" kindref="member">vec</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gate.<ref refid="classqlib_1_1quantum_1_1gates_1_1igate_1a66038ee65fec12c627789505e11f1e23" kindref="member">operate</ref>(vec,<sp/><ref refid="classqlib_1_1quantum_1_1qubit_1af8eaf337ffcb95c2445ddf35189335e4" kindref="member">state</ref>(),<sp/>inputBits);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classqlib_1_1quantum_1_1qubit_1aaf001eff84ccb4b7a6992e42bc2143cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i8<sp/><ref refid="classqlib_1_1quantum_1_1qubit_1aaf001eff84ccb4b7a6992e42bc2143cb" kindref="member">measure</ref>(i64<sp/><ref refid="classqlib_1_1quantum_1_1qubit" kindref="compound">qubit</ref><sp/>=<sp/>0){<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Prob<sp/>of<sp/>|0&gt;<sp/>is<sp/>vec(0,0).sqrMagnitude();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f32<sp/>p0<sp/>=<sp/><ref refid="classqlib_1_1quantum_1_1qubit_1a8f6e33dd5d0673f195360bc4b5c5442f" kindref="member">vec</ref>(0,0).sqrMagnitude();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Prob<sp/>of<sp/>|1&gt;<sp/>is<sp/>vec(1,0).sqrMagnitude()<sp/>or<sp/>1-p0<sp/>due<sp/>to<sp/>normalization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f32<sp/>p1<sp/>=<sp/>1.0<sp/>-<sp/>p0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f32<sp/>r<sp/>=<sp/>this-&gt;<ref refid="classqlib_1_1quantum_1_1qubit_1abb97216eead736ab87e8756b9b4c2ce9" kindref="member">distribution</ref>(<ref refid="object_8hpp_1a52c75811f4e394e7f1818d29ee034307" kindref="member">rng</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//System<sp/>collapse<sp/>dictated<sp/>by<sp/>|new&gt;<sp/>=<sp/>normalize(Pi<sp/>|old&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//P0<sp/>=<sp/>|0&gt;&lt;0|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//P1<sp/>=<sp/>|1&gt;&lt;1|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r<sp/>&lt;=<sp/>p0){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;vec<sp/>=<sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref>(2,1,<sp/>{1,<sp/>0});</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;vec<sp/>=<sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref>(2,1,<sp/>{0,<sp/>1});</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classqlib_1_1quantum_1_1qubit_1a8bf29d1f66508e4878ea861c5d8e44ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classqlib_1_1quantum_1_1qubit_1a8bf29d1f66508e4878ea861c5d8e44ec" kindref="member">toString</ref>(){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>sb;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>&lt;&lt;<sp/>(this-&gt;<ref refid="classqlib_1_1quantum_1_1qubit_1a8f6e33dd5d0673f195360bc4b5c5442f" kindref="member">vec</ref>(0,0).<ref refid="classqlib_1_1math_1_1matrix_1a06ec639a654b5319f4eb1bff591d6e7b" kindref="member">toString</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|0&gt;<sp/>+<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(this-&gt;<ref refid="classqlib_1_1quantum_1_1qubit_1a8f6e33dd5d0673f195360bc4b5c5442f" kindref="member">vec</ref>(1,0).<ref refid="classqlib_1_1math_1_1matrix_1a06ec639a654b5319f4eb1bff591d6e7b" kindref="member">toString</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|1&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sb.str();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/core/quantum/systems/qubit.hpp"/>
  </compounddef>
</doxygen>

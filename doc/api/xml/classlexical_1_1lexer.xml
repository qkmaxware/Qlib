<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classlexical_1_1lexer" kind="class" language="C++" prot="public">
    <compoundname>lexical::lexer</compoundname>
    <includes refid="lexer_8hpp" local="no">lexer.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlexical_1_1lexer_1acf8db5ce39817336f4cf12294b09bfcc" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref> * &gt;</type>
        <definition>std::vector&lt;lexeme*&gt; lexical::lexer::tokens</definition>
        <argsstring></argsstring>
        <name>tokens</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of lexemes to extract </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/runtime/lexer.hpp" line="177" column="1" bodyfile="src/runtime/lexer.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlexical_1_1lexer_1a5fb29e19937c0e78267c42e13cb545b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lexical::lexer::lexer</definition>
        <argsstring>(std::vector&lt; lexeme * &gt; tokens)</argsstring>
        <name>lexer</name>
        <param>
          <type>std::vector&lt; <ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref> * &gt;</type>
          <declname>tokens</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new lexer from a list of lexemes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/runtime/lexer.hpp" line="183" column="1" bodyfile="src/runtime/lexer.hpp" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classlexical_1_1lexer_1a89f9fd380037709ace9c8fe7604b5460" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structlexical_1_1match" kindref="compound">match</ref> &gt;</type>
        <definition>std::vector&lt;match&gt; lexical::lexer::tokenize</definition>
        <argsstring>(std::string file, std::string::iterator begin, std::string::iterator end)</argsstring>
        <name>tokenize</name>
        <param>
          <type>std::string</type>
          <declname>file</declname>
        </param>
        <param>
          <type>std::string::iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>std::string::iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tokenize an input string. Lexical exception will be thrown if an unrecognized symbol is reached </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/runtime/lexer.hpp" line="188" column="1" bodyfile="src/runtime/lexer.hpp" bodystart="188" bodyend="223"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class to tokenzie input string </para>    </detaileddescription>
    <location file="src/runtime/lexer.hpp" line="172" column="1" bodyfile="src/runtime/lexer.hpp" bodystart="172" bodyend="224"/>
    <listofallmembers>
      <member refid="classlexical_1_1lexer_1a5fb29e19937c0e78267c42e13cb545b6" prot="public" virt="non-virtual"><scope>lexical::lexer</scope><name>lexer</name></member>
      <member refid="classlexical_1_1lexer_1a89f9fd380037709ace9c8fe7604b5460" prot="public" virt="non-virtual"><scope>lexical::lexer</scope><name>tokenize</name></member>
      <member refid="classlexical_1_1lexer_1acf8db5ce39817336f4cf12294b09bfcc" prot="private" virt="non-virtual"><scope>lexical::lexer</scope><name>tokens</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="matrix_8hpp" kind="file" language="C++">
    <compoundname>matrix.hpp</compoundname>
    <includes refid="complex_8hpp" local="yes">complex.hpp</includes>
    <includes refid="object_8hpp" local="yes">./../general/object.hpp</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">vector</includes>
    <includes local="no">math.h</includes>
    <includes local="no">sstream</includes>
    <includedby refid="qlib_8h" local="yes">src/core/qlib.h</includedby>
    <includedby refid="qubit_8hpp" local="yes">src/core/quantum/systems/qubit.hpp</includedby>
    <includedby refid="igate_8hpp" local="yes">src/core/quantum/gates/igate.hpp</includedby>
    <includedby refid="system_8hpp" local="yes">src/core/quantum/systems/system.hpp</includedby>
    <includedby refid="qreg_8hpp" local="yes">src/core/quantum/systems/qreg.hpp</includedby>
    <incdepgraph>
      <node id="1373">
        <label>limits</label>
      </node>
      <node id="1370">
        <label>./../general/object.hpp</label>
        <link refid="object_8hpp"/>
        <childnode refid="1371" relation="include">
        </childnode>
        <childnode refid="1374" relation="include">
        </childnode>
        <childnode refid="1375" relation="include">
        </childnode>
        <childnode refid="1376" relation="include">
        </childnode>
        <childnode refid="1377" relation="include">
        </childnode>
        <childnode refid="1378" relation="include">
        </childnode>
      </node>
      <node id="1372">
        <label>stdint.h</label>
      </node>
      <node id="1380">
        <label>stdlib.h</label>
      </node>
      <node id="1368">
        <label>src/core/math/matrix.hpp</label>
        <link refid="matrix.hpp"/>
        <childnode refid="1369" relation="include">
        </childnode>
        <childnode refid="1370" relation="include">
        </childnode>
        <childnode refid="1381" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1375" relation="include">
        </childnode>
      </node>
      <node id="1381">
        <label>stdexcept</label>
      </node>
      <node id="1376">
        <label>exception</label>
      </node>
      <node id="1377">
        <label>random</label>
      </node>
      <node id="1369">
        <label>complex.hpp</label>
        <link refid="complex_8hpp"/>
        <childnode refid="1370" relation="include">
        </childnode>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1380" relation="include">
        </childnode>
        <childnode refid="1375" relation="include">
        </childnode>
      </node>
      <node id="1382">
        <label>vector</label>
      </node>
      <node id="1375">
        <label>sstream</label>
      </node>
      <node id="1379">
        <label>math.h</label>
      </node>
      <node id="1374">
        <label>iostream</label>
      </node>
      <node id="1378">
        <label>chrono</label>
      </node>
      <node id="1371">
        <label>./types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1372" relation="include">
        </childnode>
        <childnode refid="1373" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1409">
        <label>src/core/quantum/gates/qft.hpp</label>
        <link refid="qft_8hpp"/>
        <childnode refid="1397" relation="include">
        </childnode>
      </node>
      <node id="1388">
        <label>src/runtime/main.cpp</label>
        <link refid="runtime_2main_8cpp"/>
      </node>
      <node id="1386">
        <label>src/runtime/runtime.hpp</label>
        <link refid="runtime_8hpp"/>
        <childnode refid="1387" relation="include">
        </childnode>
        <childnode refid="1388" relation="include">
        </childnode>
        <childnode refid="1389" relation="include">
        </childnode>
      </node>
      <node id="1383">
        <label>src/core/math/matrix.hpp</label>
        <link refid="matrix.hpp"/>
        <childnode refid="1384" relation="include">
        </childnode>
        <childnode refid="1390" relation="include">
        </childnode>
        <childnode refid="1391" relation="include">
        </childnode>
        <childnode refid="1392" relation="include">
        </childnode>
        <childnode refid="1393" relation="include">
        </childnode>
      </node>
      <node id="1390">
        <label>src/core/quantum/systems/qubit.hpp</label>
        <link refid="qubit_8hpp"/>
        <childnode refid="1384" relation="include">
        </childnode>
      </node>
      <node id="1391">
        <label>src/core/quantum/gates/igate.hpp</label>
        <link refid="igate_8hpp"/>
        <childnode refid="1390" relation="include">
        </childnode>
        <childnode refid="1392" relation="include">
        </childnode>
        <childnode refid="1393" relation="include">
        </childnode>
        <childnode refid="1395" relation="include">
        </childnode>
        <childnode refid="1398" relation="include">
        </childnode>
        <childnode refid="1408" relation="include">
        </childnode>
        <childnode refid="1409" relation="include">
        </childnode>
      </node>
      <node id="1407">
        <label>src/core/quantum/gates/phase.hpp</label>
        <link refid="phase_8hpp"/>
        <childnode refid="1397" relation="include">
        </childnode>
      </node>
      <node id="1389">
        <label>src/runtime/qcircuit_exporter.hpp</label>
        <link refid="qcircuit__exporter_8hpp"/>
        <childnode refid="1388" relation="include">
        </childnode>
      </node>
      <node id="1396">
        <label>src/core/quantum/gates/ident.hpp</label>
        <link refid="ident_8hpp"/>
        <childnode refid="1397" relation="include">
        </childnode>
      </node>
      <node id="1392">
        <label>src/core/quantum/systems/system.hpp</label>
        <link refid="system_8hpp"/>
        <childnode refid="1390" relation="include">
        </childnode>
        <childnode refid="1393" relation="include">
        </childnode>
        <childnode refid="1384" relation="include">
        </childnode>
        <childnode refid="1394" relation="include">
        </childnode>
      </node>
      <node id="1385">
        <label>src/core/main.cpp</label>
        <link refid="core_2main_8cpp"/>
      </node>
      <node id="1394">
        <label>src/core/quantum/systems/ensemble.hpp</label>
        <link refid="ensemble_8hpp"/>
        <childnode refid="1384" relation="include">
        </childnode>
      </node>
      <node id="1395">
        <label>src/core/quantum/gates/onequbitgate.hpp</label>
        <link refid="onequbitgate_8hpp"/>
        <childnode refid="1396" relation="include">
        </childnode>
        <childnode refid="1398" relation="include">
        </childnode>
        <childnode refid="1399" relation="include">
        </childnode>
        <childnode refid="1403" relation="include">
        </childnode>
        <childnode refid="1405" relation="include">
        </childnode>
        <childnode refid="1406" relation="include">
        </childnode>
        <childnode refid="1407" relation="include">
        </childnode>
        <childnode refid="1408" relation="include">
        </childnode>
      </node>
      <node id="1404">
        <label>src/core/quantum/gates/toffoli.hpp</label>
        <link refid="toffoli_8hpp"/>
        <childnode refid="1397" relation="include">
        </childnode>
      </node>
      <node id="1403">
        <label>src/core/quantum/gates/pauliX.hpp</label>
        <link refid="pauliX_8hpp"/>
        <childnode refid="1397" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
        <childnode refid="1404" relation="include">
        </childnode>
      </node>
      <node id="1405">
        <label>src/core/quantum/gates/pauliY.hpp</label>
        <link refid="pauliY_8hpp"/>
        <childnode refid="1397" relation="include">
        </childnode>
        <childnode refid="1401" relation="include">
        </childnode>
      </node>
      <node id="1384">
        <label>src/core/qlib.h</label>
        <link refid="qlib_8h"/>
        <childnode refid="1385" relation="include">
        </childnode>
        <childnode refid="1386" relation="include">
        </childnode>
        <childnode refid="1388" relation="include">
        </childnode>
      </node>
      <node id="1400">
        <label>src/core/quantum/gates/cnot.hpp</label>
        <link refid="cnot_8hpp"/>
        <childnode refid="1397" relation="include">
        </childnode>
      </node>
      <node id="1387">
        <label>src/runtime/compiler.hpp</label>
        <link refid="compiler_8hpp"/>
        <childnode refid="1388" relation="include">
        </childnode>
        <childnode refid="1389" relation="include">
        </childnode>
      </node>
      <node id="1406">
        <label>src/core/quantum/gates/pauliZ.hpp</label>
        <link refid="pauliZ_8hpp"/>
        <childnode refid="1397" relation="include">
        </childnode>
        <childnode refid="1402" relation="include">
        </childnode>
      </node>
      <node id="1393">
        <label>src/core/quantum/systems/qreg.hpp</label>
        <link refid="qreg_8hpp"/>
        <childnode refid="1384" relation="include">
        </childnode>
      </node>
      <node id="1402">
        <label>src/core/quantum/gates/cz.hpp</label>
        <link refid="cz_8hpp"/>
        <childnode refid="1397" relation="include">
        </childnode>
      </node>
      <node id="1399">
        <label>src/core/quantum/gates/hadamard.hpp</label>
        <link refid="hadamard_8hpp"/>
        <childnode refid="1397" relation="include">
        </childnode>
      </node>
      <node id="1397">
        <label>src/core/quantum/standard_gates.hpp</label>
        <link refid="standard__gates_8hpp"/>
        <childnode refid="1384" relation="include">
        </childnode>
      </node>
      <node id="1401">
        <label>src/core/quantum/gates/cy.hpp</label>
        <link refid="cy_8hpp"/>
        <childnode refid="1397" relation="include">
        </childnode>
      </node>
      <node id="1398">
        <label>src/core/quantum/gates/controlledgate.hpp</label>
        <link refid="controlledgate_8hpp"/>
        <childnode refid="1396" relation="include">
        </childnode>
        <childnode refid="1399" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
        <childnode refid="1401" relation="include">
        </childnode>
        <childnode refid="1402" relation="include">
        </childnode>
      </node>
      <node id="1408">
        <label>src/core/quantum/gates/controlled2gate.hpp</label>
        <link refid="controlled2gate_8hpp"/>
        <childnode refid="1404" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classqlib_1_1math_1_1matrix" prot="public">qlib::math::matrix</innerclass>
    <innernamespace refid="namespaceqlib">qlib</innernamespace>
    <innernamespace refid="namespaceqlib_1_1math">qlib::math</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_QLIB_MATH_MATRIX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_QLIB_MATH_MATRIX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="complex_8hpp" kindref="compound">complex.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;./../general/object.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceqlib" kindref="compound">qlib</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">math<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//Early<sp/>declarations<sp/>(before<sp/>defined)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">matrix;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">matrix<sp/><ref refid="namespaceqlib_1_1math_1aab8f60842d892b237625a8215572926a" kindref="member">operator * </ref>(matrix<sp/>a,<sp/>matrix<sp/>b);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classqlib_1_1math_1_1matrix" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classxobject" kindref="compound">xobject</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="classqlib_1_1math_1_1matrix_1ad764d65375ba1e50381f640bdc181c0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;complex&gt;<sp/><ref refid="classqlib_1_1math_1_1matrix_1ad764d65375ba1e50381f640bdc181c0b" kindref="member">values</ref>;</highlight></codeline>
<codeline lineno="39" refid="classqlib_1_1math_1_1matrix_1af29b6ea4316eb972bbdc55da6e54dbb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1math_1_1matrix_1af29b6ea4316eb972bbdc55da6e54dbb3" kindref="member">rows</ref>;</highlight></codeline>
<codeline lineno="43" refid="classqlib_1_1math_1_1matrix_1ad3c2dd80c600d7bf37ae5bbdf5f056b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1math_1_1matrix_1ad3c2dd80c600d7bf37ae5bbdf5f056b8" kindref="member">columns</ref>;</highlight></codeline>
<codeline lineno="47" refid="classqlib_1_1math_1_1matrix_1aef00292f85054708922acef6b7744a40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1math_1_1matrix_1aef00292f85054708922acef6b7744a40" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53" refid="classqlib_1_1math_1_1matrix_1a6e66a3f67ecf06a42068d2dbf8885e66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix_1a6e66a3f67ecf06a42068d2dbf8885e66" kindref="member">matrix</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>columns){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;rows<sp/>=<sp/>rows<sp/>&gt;<sp/>0<sp/>?<sp/>rows<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;columns<sp/>=<sp/>columns<sp/>&gt;<sp/>0<sp/>?<sp/>columns<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;length<sp/>=<sp/>(this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1af29b6ea4316eb972bbdc55da6e54dbb3" kindref="member">rows</ref>)<sp/>*<sp/>(this-&gt;columns);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;values<sp/>=<sp/>std::vector&lt;complex&gt;(this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1aef00292f85054708922acef6b7744a40" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1aef00292f85054708922acef6b7744a40" kindref="member">length</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;values[i]<sp/>=<sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">complex</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classqlib_1_1math_1_1matrix_1a8cbac1f2ae9917a4742cd0d147e3ba9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix_1a8cbac1f2ae9917a4742cd0d147e3ba9b" kindref="member">matrix</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>columns,<sp/>std::vector&lt;complex&gt;<sp/>values)<sp/>:<sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref>(rows,<sp/>columns){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>smallest<sp/>=<sp/>this-&gt;length<sp/>&lt;<sp/>values.<ref refid="classqlib_1_1math_1_1matrix_1a2f0ada8003cf2306534700502f598428" kindref="member">size</ref>()<sp/>?<sp/>this-&gt;length<sp/>:<sp/>values.size();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>smallest;<sp/>i++){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;values[i]<sp/>=<sp/>values[i];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classqlib_1_1math_1_1matrix_1afebdd1cf189728ace53a594d5ef8b750" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix_1afebdd1cf189728ace53a594d5ef8b750" kindref="member">~matrix</ref>(){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delete<sp/>this-&gt;values;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classqlib_1_1math_1_1matrix_1af858a64510126a09b2a25fbd771cbf1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/><ref refid="classqlib_1_1math_1_1matrix_1af858a64510126a09b2a25fbd771cbf1c" kindref="member">transpose</ref>(){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>m(this-&gt;columns,<sp/>this-&gt;rows);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1af29b6ea4316eb972bbdc55da6e54dbb3" kindref="member">rows</ref>;<sp/>r++){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1ad3c2dd80c600d7bf37ae5bbdf5f056b8" kindref="member">columns</ref>;<sp/>c++){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m(c,r)<sp/>=<sp/>(*this)(r,c);<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classqlib_1_1math_1_1matrix_1a1dea0a516a68c6c3e93e437a0e82ad04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/><ref refid="classqlib_1_1math_1_1matrix_1a1dea0a516a68c6c3e93e437a0e82ad04" kindref="member">adjoint</ref>(){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>m(this-&gt;columns,<sp/>this-&gt;rows);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1af29b6ea4316eb972bbdc55da6e54dbb3" kindref="member">rows</ref>;<sp/>r++){</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1ad3c2dd80c600d7bf37ae5bbdf5f056b8" kindref="member">columns</ref>;<sp/>c++){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m(c,r)<sp/>=<sp/>(*this)(r,c).conjugate();<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classqlib_1_1math_1_1matrix_1a7f12f7fc8d075a596978cbcdfc6106c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1math_1_1matrix_1a7f12f7fc8d075a596978cbcdfc6106c0" kindref="member">isSquare</ref>(){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>()<sp/>!=<sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classqlib_1_1math_1_1matrix_1ae63299aa44d564dc03fba13b928cf191" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1math_1_1matrix_1ae63299aa44d564dc03fba13b928cf191" kindref="member">isUnitary</ref>(){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>a<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>a_dagger<sp/>=<sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1a1dea0a516a68c6c3e93e437a0e82ad04" kindref="member">adjoint</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>q<sp/>=<sp/>a<sp/>*<sp/>a_dagger;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Is<sp/>&apos;q&apos;<sp/>approximately<sp/>I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>q.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>();<sp/>r++){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>q.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>();<sp/>c++){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r<sp/>==<sp/>c){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Approx<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!q(r,c).isApproximatelyOne())</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Approx<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!q(r,c).isApproximatelyZero())</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classqlib_1_1math_1_1matrix_1ad6f19b58b5940eb22eda118be1e5decd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1math_1_1matrix_1ad6f19b58b5940eb22eda118be1e5decd" kindref="member">isColumn</ref>(){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classqlib_1_1math_1_1matrix_1aaae121263906f945fcbb1e8e2ee68c71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1math_1_1matrix_1aaae121263906f945fcbb1e8e2ee68c71" kindref="member">isRow</ref>(){</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classqlib_1_1math_1_1matrix_1a50cbbef6e5b7888aecffbf66def70154" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">complex</ref>&amp;<sp/><ref refid="classqlib_1_1math_1_1matrix_1a50cbbef6e5b7888aecffbf66def70154" kindref="member">operator() </ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>r<sp/>*<sp/>columns<sp/>+<sp/>c;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idx<sp/>&lt;<sp/>0<sp/>||<sp/>idx<sp/>&gt;=<sp/>length){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Row<sp/>or<sp/>column<sp/>is<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values[idx];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classqlib_1_1math_1_1matrix_1af93c414d328b985c83c032f41f485a9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">complex</ref>&amp;<sp/><ref refid="classqlib_1_1math_1_1matrix_1a50cbbef6e5b7888aecffbf66def70154" kindref="member">operator() </ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idx<sp/>&lt;<sp/>0<sp/>||<sp/>idx<sp/>&gt;=<sp/>length){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Row<sp/>or<sp/>column<sp/>is<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values[idx];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>(){</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1af29b6ea4316eb972bbdc55da6e54dbb3" kindref="member">rows</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>(){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1ad3c2dd80c600d7bf37ae5bbdf5f056b8" kindref="member">columns</ref>;<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classqlib_1_1math_1_1matrix_1a2f0ada8003cf2306534700502f598428" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classqlib_1_1math_1_1matrix_1a2f0ada8003cf2306534700502f598428" kindref="member">size</ref>(){</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1aef00292f85054708922acef6b7744a40" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classqlib_1_1math_1_1matrix_1a2d09bd42691acdbf315d5cbd7a698698" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">complex</ref><sp/>value){</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>r<sp/>*<sp/>columns<sp/>+<sp/>c;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idx<sp/>&lt;<sp/>0<sp/>||<sp/>idx<sp/>&gt;=<sp/>length){</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Row<sp/>or<sp/>column<sp/>is<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;values[idx]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classqlib_1_1math_1_1matrix_1ae97863a30bb445897ff63c77582a366a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">complex</ref><sp/>value){</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idx<sp/>&lt;<sp/>0<sp/>||<sp/>idx<sp/>&gt;=<sp/>length){</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Row<sp/>or<sp/>column<sp/>is<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;values[idx]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classqlib_1_1math_1_1matrix_1a91fcadaccfcd68adb71de0da6f5d267f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">complex</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c){</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>r<sp/>*<sp/>columns<sp/>+<sp/>c;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idx<sp/>&lt;<sp/>0<sp/>||<sp/>idx<sp/>&gt;=<sp/>length){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Row<sp/>or<sp/>column<sp/>is<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;values[idx];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classqlib_1_1math_1_1matrix_1a17dce2bfd8addcb026f6d9159134f1c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">complex</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx){</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idx<sp/>&lt;<sp/>0<sp/>||<sp/>idx<sp/>&gt;=<sp/>length){</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Row<sp/>or<sp/>column<sp/>is<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;values[idx];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classqlib_1_1math_1_1matrix_1a06ec639a654b5319f4eb1bff591d6e7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classqlib_1_1math_1_1matrix_1a06ec639a654b5319f4eb1bff591d6e7b" kindref="member">toString</ref>(){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>sb;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1af29b6ea4316eb972bbdc55da6e54dbb3" kindref="member">rows</ref>;<sp/>r++){</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>this-&gt;<ref refid="classqlib_1_1math_1_1matrix_1ad3c2dd80c600d7bf37ae5bbdf5f056b8" kindref="member">columns</ref>;<sp/>c++){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(r,<sp/>c).<ref refid="classqlib_1_1math_1_1matrix_1a06ec639a654b5319f4eb1bff591d6e7b" kindref="member">toString</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sb.str();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="classqlib_1_1math_1_1matrix_1a1cbe9185c4f147d821eeb0b36ed9cc86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;complex&gt;::iterator<sp/><ref refid="classqlib_1_1math_1_1matrix_1a1cbe9185c4f147d821eeb0b36ed9cc86" kindref="member">begin</ref>(){</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;values).begin();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266" refid="classqlib_1_1math_1_1matrix_1ae250bb5455fe71b836a5252335575545" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;complex&gt;::iterator<sp/><ref refid="classqlib_1_1math_1_1matrix_1ae250bb5455fe71b836a5252335575545" kindref="member">end</ref>(){</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;values).end();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal">};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="namespaceqlib_1_1math_1abc12e050174e1760453206cc5bd3206a" refkind="member"><highlight class="normal"><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/><ref refid="namespaceqlib_1_1math_1a750c1f90fa6c3ebec9a635de1d146a5b" kindref="member">operator + </ref>(<ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>a,<sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>b){</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>()<sp/>!=<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>()<sp/>||<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>()<sp/>!=<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>()){</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::length_error(</highlight><highlight class="stringliteral">&quot;Matrix<sp/>dims<sp/>do<sp/>not<sp/>match&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>m(a.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>(),<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>());</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a2f0ada8003cf2306534700502f598428" kindref="member">size</ref>();<sp/>i++){</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.<ref refid="classqlib_1_1math_1_1matrix_1a2d09bd42691acdbf315d5cbd7a698698" kindref="member">set</ref>(i,<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a91fcadaccfcd68adb71de0da6f5d267f" kindref="member">get</ref>(i)<sp/>+<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1a91fcadaccfcd68adb71de0da6f5d267f" kindref="member">get</ref>(i));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="namespaceqlib_1_1math_1a258ee58fb06869ced4551ec4eca20cf5" refkind="member"><highlight class="normal"><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/><ref refid="namespaceqlib_1_1math_1a0824fabde8f47ad8f052b82ce7ffc7ba" kindref="member">operator - </ref>(<ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>a,<sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>b){</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>()<sp/>!=<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>()<sp/>||<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>()<sp/>!=<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>()){</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::length_error(</highlight><highlight class="stringliteral">&quot;Matrix<sp/>dims<sp/>do<sp/>not<sp/>match&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>m(a.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>(),<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a2f0ada8003cf2306534700502f598428" kindref="member">size</ref>();<sp/>i++){</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.<ref refid="classqlib_1_1math_1_1matrix_1a2d09bd42691acdbf315d5cbd7a698698" kindref="member">set</ref>(i,<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a91fcadaccfcd68adb71de0da6f5d267f" kindref="member">get</ref>(i)<sp/>-<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1a91fcadaccfcd68adb71de0da6f5d267f" kindref="member">get</ref>(i));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="namespaceqlib_1_1math_1a76eeb4db471510ab7143369e8f5a7cb1" refkind="member"><highlight class="normal"><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/><ref refid="namespaceqlib_1_1math_1aab8f60842d892b237625a8215572926a" kindref="member">operator * </ref>(<ref refid="classqlib_1_1math_1_1complex" kindref="compound">complex</ref><sp/>s,<sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>a){</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>m(a.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>(),<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a2f0ada8003cf2306534700502f598428" kindref="member">size</ref>();<sp/>i++){</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.<ref refid="classqlib_1_1math_1_1matrix_1a2d09bd42691acdbf315d5cbd7a698698" kindref="member">set</ref>(i,<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a91fcadaccfcd68adb71de0da6f5d267f" kindref="member">get</ref>(i)<sp/>*<sp/>s);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="namespaceqlib_1_1math_1a01348bd4469d81d621104d4efaeb6f5a" refkind="member"><highlight class="normal"><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/><ref refid="namespaceqlib_1_1math_1aab8f60842d892b237625a8215572926a" kindref="member">operator * </ref>(<ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>a,<sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">complex</ref><sp/>s){</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>m(a.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>(),<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>());</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a2f0ada8003cf2306534700502f598428" kindref="member">size</ref>();<sp/>i++){</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.<ref refid="classqlib_1_1math_1_1matrix_1a2d09bd42691acdbf315d5cbd7a698698" kindref="member">set</ref>(i,<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a91fcadaccfcd68adb71de0da6f5d267f" kindref="member">get</ref>(i)<sp/>*<sp/>s);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="namespaceqlib_1_1math_1a545e46c9d4ed76c49f027f633c717790" refkind="member"><highlight class="normal"><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/><ref refid="namespaceqlib_1_1math_1a07b837d7b7260a52a080a3ce11f28f6d" kindref="member">operator / </ref>(<ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>a,<sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">complex</ref><sp/>s){</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>m(a.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>(),<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>());</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a2f0ada8003cf2306534700502f598428" kindref="member">size</ref>();<sp/>i++){</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.<ref refid="classqlib_1_1math_1_1matrix_1a2d09bd42691acdbf315d5cbd7a698698" kindref="member">set</ref>(i,<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a91fcadaccfcd68adb71de0da6f5d267f" kindref="member">get</ref>(i)<sp/>/<sp/>s);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="namespaceqlib_1_1math_1a4e25907425745791aece8ad080a45fec" refkind="member"><highlight class="normal"><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/><ref refid="namespaceqlib_1_1math_1aab8f60842d892b237625a8215572926a" kindref="member">operator * </ref>(<ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>a,<sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>b){</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>()<sp/>!=<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>()){</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::length_error(</highlight><highlight class="stringliteral">&quot;Matrix<sp/>dims<sp/>do<sp/>not<sp/>match&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>m(a.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>(),<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>();<sp/>i++){</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>();<sp/>j++){</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1complex" kindref="compound">complex</ref><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>();<sp/>k++){</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>sum<sp/>+<sp/>a(i,k)<sp/>*<sp/>b(k,j);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.set(i,j,<sp/>sum);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="namespaceqlib_1_1math_1a0e8e1dad475a4db8f847283d0104d424" refkind="member"><highlight class="normal"><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/><ref refid="namespaceqlib_1_1math_1a0e8e1dad475a4db8f847283d0104d424" kindref="member">operator &lt;&lt; </ref>(<ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>a,<sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>b){</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Compute<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nw<sp/>=<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>()<sp/>*<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nh<sp/>=<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>()<sp/>*<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>matrix;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqlib_1_1math_1_1matrix" kindref="compound">matrix</ref><sp/>m(nh,<sp/>nw);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Loop<sp/>over<sp/>all<sp/>elements<sp/>setting<sp/>as<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ar<sp/>=<sp/>0;<sp/>ar<sp/>&lt;<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>();<sp/>ar++){</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ac<sp/>=<sp/>0;<sp/>ac<sp/>&lt;<sp/>a.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>();<sp/>ac++){</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>br<sp/>=<sp/>0;<sp/>br<sp/>&lt;<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>();<sp/>br++){</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bc<sp/>=<sp/>0;<sp/>bc<sp/>&lt;<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>();<sp/>bc++){</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m(br<sp/>+<sp/>ar<sp/>*<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1add844c31055d495274b037e7bcd8f0b7" kindref="member">countRows</ref>(),<sp/>bc<sp/>+<sp/>ac<sp/>*<sp/>b.<ref refid="classqlib_1_1math_1_1matrix_1a69ed708edf603637731e4f6fe46b0754" kindref="member">countColumns</ref>())<sp/>=<sp/>a(ar,<sp/>ac)<sp/>*<sp/>b(br,<sp/>bc);<sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/core/math/matrix.hpp"/>
  </compounddef>
</doxygen>

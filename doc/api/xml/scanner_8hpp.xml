<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="scanner_8hpp" kind="file" language="C++">
    <compoundname>scanner.hpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includedby refid="compiler_8hpp" local="yes">src/runtime/compiler.hpp</includedby>
    <includedby refid="runtime_2main_8cpp" local="yes">src/runtime/main.cpp</includedby>
    <incdepgraph>
      <node id="2254">
        <label>fstream</label>
      </node>
      <node id="2253">
        <label>iostream</label>
      </node>
      <node id="2252">
        <label>src/runtime/scanner.hpp</label>
        <link refid="scanner.hpp"/>
        <childnode refid="2253" relation="include">
        </childnode>
        <childnode refid="2254" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2257">
        <label>src/runtime/main.cpp</label>
        <link refid="runtime_2main_8cpp"/>
      </node>
      <node id="2258">
        <label>src/runtime/qcircuit_exporter.hpp</label>
        <link refid="qcircuit__exporter_8hpp"/>
        <childnode refid="2257" relation="include">
        </childnode>
      </node>
      <node id="2256">
        <label>src/runtime/compiler.hpp</label>
        <link refid="compiler_8hpp"/>
        <childnode refid="2257" relation="include">
        </childnode>
        <childnode refid="2258" relation="include">
        </childnode>
      </node>
      <node id="2255">
        <label>src/runtime/scanner.hpp</label>
        <link refid="scanner.hpp"/>
        <childnode refid="2256" relation="include">
        </childnode>
        <childnode refid="2257" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classscanner" prot="public">scanner</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_SCANNER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SCANNER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classscanner" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classscanner" kindref="compound">scanner</ref>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15" refid="classscanner_1a6b136b858fa02bb408dd7744edc546bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/><ref refid="classscanner_1a6b136b858fa02bb408dd7744edc546bf" kindref="member">file</ref>;</highlight></codeline>
<codeline lineno="19" refid="classscanner_1adf0c8e5cf0ec04c0ff4d7c158f7bcb33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab2bb0e5480d1d957383df6b350794313" kindref="member">ulong</ref><sp/><ref refid="classscanner_1adf0c8e5cf0ec04c0ff4d7c158f7bcb33" kindref="member">file_line</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24" refid="classscanner_1a97823931b3c1fdfaabde9b0eb31310a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classscanner_1a97823931b3c1fdfaabde9b0eb31310a6" kindref="member">scanner</ref>(std::string<sp/>file_name)<sp/>:file(file_name),<sp/>file_line(1){</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29" refid="classscanner_1ae0216bb31141042c9459f6d91cd18e91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classscanner_1ae0216bb31141042c9459f6d91cd18e91" kindref="member">next</ref>(std::string&amp;<sp/>line){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::getline(file,<sp/>line)){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_line<sp/>++;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39" refid="classscanner_1ada10515d2de6c37656a4e07d7257eaba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8h_1ab2bb0e5480d1d957383df6b350794313" kindref="member">ulong</ref><sp/><ref refid="classscanner_1ada10515d2de6c37656a4e07d7257eaba" kindref="member">getLineNumber</ref>(){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classscanner_1adf0c8e5cf0ec04c0ff4d7c158f7bcb33" kindref="member">file_line</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/runtime/scanner.hpp"/>
  </compounddef>
</doxygen>

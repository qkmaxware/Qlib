<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="runtime_2main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes refid="qlib_8h" local="yes">./../core/qlib.h</includes>
    <includes refid="lexer_8hpp" local="yes">./lexer.hpp</includes>
    <includes refid="parser_8hpp" local="yes">./parser.hpp</includes>
    <includes refid="compiler_8hpp" local="yes">./compiler.hpp</includes>
    <includes refid="runtime_8hpp" local="yes">./runtime.hpp</includes>
    <includes refid="scanner_8hpp" local="yes">./scanner.hpp</includes>
    <includes refid="qcircuit__exporter_8hpp" local="yes">./qcircuit_exporter.hpp</includes>
    <includes refid="argparser_8hpp" local="yes">./argparser.hpp</includes>
    <incdepgraph>
      <node id="1309">
        <label>./gates/qft.hpp</label>
        <link refid="qft_8hpp"/>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
      </node>
      <node id="1270">
        <label>src/runtime/main.cpp</label>
        <link refid="runtime/main.cpp"/>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1312" relation="include">
        </childnode>
        <childnode refid="1314" relation="include">
        </childnode>
        <childnode refid="1316" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
        <childnode refid="1321" relation="include">
        </childnode>
        <childnode refid="1322" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
      </node>
      <node id="1325">
        <label>iomanip</label>
      </node>
      <node id="1277">
        <label>limits</label>
      </node>
      <node id="1274">
        <label>./general/object.hpp</label>
        <link refid="object_8hpp"/>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
        <childnode refid="1281" relation="include">
        </childnode>
      </node>
      <node id="1323">
        <label>./svg.hpp</label>
        <link refid="svg_8hpp"/>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1315" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
      </node>
      <node id="1320">
        <label>./runtime.hpp</label>
        <link refid="runtime_8hpp"/>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1311" relation="include">
        </childnode>
        <childnode refid="1315" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
      </node>
      <node id="1276">
        <label>stdint.h</label>
      </node>
      <node id="1287">
        <label>stdlib.h</label>
      </node>
      <node id="1288">
        <label>./math/matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1289" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
      </node>
      <node id="1282">
        <label>./general/constants.h</label>
        <link refid="constants_8h"/>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
      </node>
      <node id="1291">
        <label>./quantum/systems/qubit.hpp</label>
        <link refid="qubit_8hpp"/>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1293" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
      </node>
      <node id="1284">
        <label>cmath</label>
      </node>
      <node id="1292">
        <label>./../gates/igate.hpp</label>
        <link refid="igate_8hpp"/>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
      </node>
      <node id="1289">
        <label>stdexcept</label>
      </node>
      <node id="1324">
        <label>colour.hpp</label>
        <link refid="colour_8hpp"/>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
      </node>
      <node id="1303">
        <label>./gates/phase.hpp</label>
        <link refid="phase_8hpp"/>
        <childnode refid="1297" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
      </node>
      <node id="1322">
        <label>./qcircuit_exporter.hpp</label>
        <link refid="qcircuit__exporter_8hpp"/>
        <childnode refid="1316" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1311" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
      </node>
      <node id="1318">
        <label>string</label>
      </node>
      <node id="1296">
        <label>./gates/ident.hpp</label>
        <link refid="ident_8hpp"/>
        <childnode refid="1297" relation="include">
        </childnode>
        <childnode refid="1298" relation="include">
        </childnode>
      </node>
      <node id="1293">
        <label>system.hpp</label>
        <link refid="system_8hpp"/>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
        <childnode refid="1292" relation="include">
        </childnode>
      </node>
      <node id="1311">
        <label>map</label>
      </node>
      <node id="1313">
        <label>regex</label>
      </node>
      <node id="1279">
        <label>exception</label>
      </node>
      <node id="1272">
        <label>fstream</label>
      </node>
      <node id="1314">
        <label>./parser.hpp</label>
        <link refid="parser_8hpp"/>
        <childnode refid="1312" relation="include">
        </childnode>
        <childnode refid="1315" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
      </node>
      <node id="1310">
        <label>./quantum/systems/ensemble.hpp</label>
        <link refid="ensemble_8hpp"/>
        <childnode refid="1293" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1311" relation="include">
        </childnode>
      </node>
      <node id="1280">
        <label>random</label>
      </node>
      <node id="1297">
        <label>onequbitgate.hpp</label>
        <link refid="onequbitgate_8hpp"/>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
      </node>
      <node id="1307">
        <label>./gates/toffoli.hpp</label>
        <link refid="toffoli_8hpp"/>
        <childnode refid="1308" relation="include">
        </childnode>
        <childnode refid="1300" relation="include">
        </childnode>
      </node>
      <node id="1286">
        <label>./math/complex.hpp</label>
        <link refid="complex_8hpp"/>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
      </node>
      <node id="1300">
        <label>./gates/pauliX.hpp</label>
        <link refid="pauliX_8hpp"/>
        <childnode refid="1297" relation="include">
        </childnode>
      </node>
      <node id="1317">
        <label>stack</label>
      </node>
      <node id="1290">
        <label>vector</label>
      </node>
      <node id="1301">
        <label>./gates/pauliY.hpp</label>
        <link refid="pauliY_8hpp"/>
        <childnode refid="1297" relation="include">
        </childnode>
      </node>
      <node id="1273">
        <label>./../core/qlib.h</label>
        <link refid="qlib_8h"/>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
        <childnode refid="1291" relation="include">
        </childnode>
        <childnode refid="1294" relation="include">
        </childnode>
        <childnode refid="1295" relation="include">
        </childnode>
        <childnode refid="1293" relation="include">
        </childnode>
        <childnode refid="1310" relation="include">
        </childnode>
      </node>
      <node id="1304">
        <label>./gates/cnot.hpp</label>
        <link refid="cnot_8hpp"/>
        <childnode refid="1298" relation="include">
        </childnode>
        <childnode refid="1300" relation="include">
        </childnode>
      </node>
      <node id="1316">
        <label>./compiler.hpp</label>
        <link refid="compiler_8hpp"/>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1317" relation="include">
        </childnode>
        <childnode refid="1311" relation="include">
        </childnode>
        <childnode refid="1318" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1312" relation="include">
        </childnode>
        <childnode refid="1314" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
        <childnode refid="1321" relation="include">
        </childnode>
      </node>
      <node id="1278">
        <label>sstream</label>
      </node>
      <node id="1302">
        <label>./gates/pauliZ.hpp</label>
        <link refid="pauliZ_8hpp"/>
        <childnode refid="1297" relation="include">
        </childnode>
      </node>
      <node id="1294">
        <label>./quantum/systems/qreg.hpp</label>
        <link refid="qreg_8hpp"/>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1293" relation="include">
        </childnode>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
      </node>
      <node id="1306">
        <label>./gates/cz.hpp</label>
        <link refid="cz_8hpp"/>
        <childnode refid="1298" relation="include">
        </childnode>
        <childnode refid="1302" relation="include">
        </childnode>
      </node>
      <node id="1283">
        <label>math.h</label>
      </node>
      <node id="1285">
        <label>./general/properties.h</label>
        <link refid="properties_8h"/>
      </node>
      <node id="1271">
        <label>iostream</label>
      </node>
      <node id="1312">
        <label>./lexer.hpp</label>
        <link refid="lexer_8hpp"/>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1313" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
      </node>
      <node id="1299">
        <label>./gates/hadamard.hpp</label>
        <link refid="hadamard_8hpp"/>
        <childnode refid="1297" relation="include">
        </childnode>
        <childnode refid="1298" relation="include">
        </childnode>
      </node>
      <node id="1295">
        <label>./quantum/standard_gates.hpp</label>
        <link refid="standard__gates_8hpp"/>
        <childnode refid="1296" relation="include">
        </childnode>
        <childnode refid="1299" relation="include">
        </childnode>
        <childnode refid="1300" relation="include">
        </childnode>
        <childnode refid="1301" relation="include">
        </childnode>
        <childnode refid="1302" relation="include">
        </childnode>
        <childnode refid="1303" relation="include">
        </childnode>
        <childnode refid="1304" relation="include">
        </childnode>
        <childnode refid="1305" relation="include">
        </childnode>
        <childnode refid="1306" relation="include">
        </childnode>
        <childnode refid="1307" relation="include">
        </childnode>
        <childnode refid="1309" relation="include">
        </childnode>
      </node>
      <node id="1321">
        <label>./scanner.hpp</label>
        <link refid="scanner_8hpp"/>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
      </node>
      <node id="1281">
        <label>chrono</label>
      </node>
      <node id="1305">
        <label>./gates/cy.hpp</label>
        <link refid="cy_8hpp"/>
        <childnode refid="1298" relation="include">
        </childnode>
        <childnode refid="1301" relation="include">
        </childnode>
      </node>
      <node id="1319">
        <label>algorithm</label>
      </node>
      <node id="1275">
        <label>./types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1277" relation="include">
        </childnode>
      </node>
      <node id="1298">
        <label>controlledgate.hpp</label>
        <link refid="controlledgate_8hpp"/>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1297" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
      </node>
      <node id="1315">
        <label>memory</label>
      </node>
      <node id="1308">
        <label>controlled2gate.hpp</label>
        <link refid="controlled2gate_8hpp"/>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1297" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
      </node>
      <node id="1326">
        <label>./argparser.hpp</label>
        <link refid="argparser_8hpp"/>
        <childnode refid="1311" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="runtime_2main_8cpp_1a877cce34f3e58fd7f9194fab90724cb8" prot="public" static="no">
        <name>MAJOR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/runtime/main.cpp" line="4" column="9" bodyfile="src/runtime/main.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="runtime_2main_8cpp_1a4e10915d93013542d442d78de0e02e9a" prot="public" static="no">
        <name>MINOR</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/runtime/main.cpp" line="5" column="9" bodyfile="src/runtime/main.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="runtime_2main_8cpp_1af59c44c1f3ff875c35393428624473aa" prot="public" static="no">
        <name>PATCH</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/runtime/main.cpp" line="6" column="9" bodyfile="src/runtime/main.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="runtime_2main_8cpp_1a47f2e62c0dbebc787052c165afcada0e" prot="public" static="no">
        <name>NAME</name>
        <initializer>&quot;Qlib Runtime&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/runtime/main.cpp" line="8" column="9" bodyfile="src/runtime/main.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="runtime_2main_8cpp_1ab22d26d55aa2ef05c5de8abb9cadfd50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int arg_count, char *arg_values[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>arg_count</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>arg_values</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/runtime/main.cpp" line="30" column="1" bodyfile="src/runtime/main.cpp" bodystart="30" bodyend="181"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//Version<sp/>information:<sp/>MAJOR.MINOR.PATCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAJOR<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MINOR<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PATCH<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NAME<sp/>&quot;Qlib<sp/>Runtime&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//File<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;./../core/qlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lexer_8hpp" kindref="compound">./lexer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parser_8hpp" kindref="compound">./parser.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="compiler_8hpp" kindref="compound">./compiler.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="runtime_8hpp" kindref="compound">./runtime.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scanner_8hpp" kindref="compound">./scanner.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qcircuit__exporter_8hpp" kindref="compound">./qcircuit_exporter.hpp</ref>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="argparser_8hpp" kindref="compound">./argparser.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelexical" kindref="compound">lexical</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceparser" kindref="compound">parser</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="core_2main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg_count,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>arg_values[]){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>in<sp/>command<sp/>line<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classargz" kindref="compound">argz</ref><sp/>arg(arg_count,<sp/>arg_values);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Configure<sp/>lexical<sp/>tokens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Keywords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_anchor(</highlight><highlight class="stringliteral">&quot;Anchor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^\\.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_goto(</highlight><highlight class="stringliteral">&quot;Goto&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^goto\\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_start(</highlight><highlight class="stringliteral">&quot;Start&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^begin\\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_mapping(</highlight><highlight class="stringliteral">&quot;Map&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^-&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_measure(</highlight><highlight class="stringliteral">&quot;Measure&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^measure\\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_print(</highlight><highlight class="stringliteral">&quot;Print&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^print\\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_end(</highlight><highlight class="stringliteral">&quot;End&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^end\\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_if(</highlight><highlight class="stringliteral">&quot;If&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^if\\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_then(</highlight><highlight class="stringliteral">&quot;Then&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^then\\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_for(</highlight><highlight class="stringliteral">&quot;For&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^for\\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_loop(</highlight><highlight class="stringliteral">&quot;Loop&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^loop\\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_include(</highlight><highlight class="stringliteral">&quot;Include&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^include\\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_reset(</highlight><highlight class="stringliteral">&quot;Zero&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^zero\\b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Skippables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_lineComment(</highlight><highlight class="stringliteral">&quot;Line<sp/>Comment&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^//[^\\r\\n]*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_lineComment.skippable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_whitespace(</highlight><highlight class="stringliteral">&quot;Whitespace&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^[\\t\\f\\v\\r\\n<sp/>]+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_whitespace.skippable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Literals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_string(</highlight><highlight class="stringliteral">&quot;String&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^\\\&quot;[^\\r\\n]*?\\\&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_indexor(</highlight><highlight class="stringliteral">&quot;Indexor&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^([a-zA-Z_]+)([0-9]+)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_reference(</highlight><highlight class="stringliteral">&quot;Reference&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^[a-zA-Z_]+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_integer(</highlight><highlight class="stringliteral">&quot;Integer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^[0-9]+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_leftb(</highlight><highlight class="stringliteral">&quot;Left<sp/>[&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^\\[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexeme" kindref="compound">lexeme</ref><sp/>_rightb(</highlight><highlight class="stringliteral">&quot;Right<sp/>]&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;^\\]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>tokenizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlexical_1_1lexer" kindref="compound">lexer</ref><sp/>tokenizer({</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_anchor,<sp/>&amp;_goto,<sp/>&amp;_start,<sp/>&amp;_mapping,<sp/>&amp;_measure,<sp/>&amp;_print,<sp/>&amp;_end,<sp/>&amp;_if,<sp/>&amp;_then,<sp/>&amp;_for,<sp/>&amp;_loop,<sp/>&amp;_include,<sp/>&amp;_reset,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_lineComment,<sp/>&amp;_whitespace,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_string,<sp/>&amp;_indexor,<sp/>&amp;_reference,<sp/>&amp;_integer,<sp/>&amp;_leftb,<sp/>&amp;_rightb</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>rules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//include<sp/>&quot;filename&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceparser_1a85b2df48287fddaca144a5f6c01b4761" kindref="member">ruleptr</ref><sp/>import_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_include<sp/>&lt;&lt;<sp/>_string;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//zero<sp/>qreg<sp/>q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceparser_1a85b2df48287fddaca144a5f6c01b4761" kindref="member">ruleptr</ref><sp/>reset_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_reset<sp/>&lt;&lt;<sp/>_reference<sp/>&lt;&lt;<sp/>(_reference<sp/>|<sp/>_indexor);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//.label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceparser_1a85b2df48287fddaca144a5f6c01b4761" kindref="member">ruleptr</ref><sp/>label_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_anchor<sp/>&lt;&lt;<sp/>_reference;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print<sp/>q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceparser_1a85b2df48287fddaca144a5f6c01b4761" kindref="member">ruleptr</ref><sp/>print_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_print<sp/>&lt;&lt;<sp/>_reference;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cnot<sp/>q0<sp/>q1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceparser_1a85b2df48287fddaca144a5f6c01b4761" kindref="member">ruleptr</ref><sp/>application_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_reference<sp/>&lt;&lt;<sp/>*_indexor;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//myfunc<sp/>q</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ruleptr<sp/>fncall_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_reference<sp/>&lt;&lt;<sp/>*_reference;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//qreg<sp/>myreg[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceparser_1a85b2df48287fddaca144a5f6c01b4761" kindref="member">ruleptr</ref><sp/>typedecl_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(((_reference<sp/>&lt;&lt;<sp/>_reference)<sp/>&lt;&lt;<sp/>_leftb)<sp/>&lt;&lt;<sp/>_integer)<sp/>&lt;&lt;<sp/>_rightb;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//measure<sp/>q<sp/>-&gt;<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceparser_1a85b2df48287fddaca144a5f6c01b4761" kindref="member">ruleptr</ref><sp/>measurement_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_measure<sp/>&lt;&lt;<sp/>((_indexor<sp/>&lt;&lt;<sp/>_mapping<sp/>&lt;&lt;<sp/>_indexor)<sp/>|<sp/>(_reference<sp/>&lt;&lt;<sp/>_mapping<sp/>&lt;&lt;<sp/>_reference));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//start<sp/>myfunc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ruleptr<sp/>fndecl_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_start<sp/>&lt;&lt;<sp/>_reference;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ruleptr<sp/>fnend_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_end;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//gate<sp/>mygate<sp/>0,<sp/>1,<sp/>1,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ruleptr<sp/>gate_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_gate<sp/>&lt;&lt;<sp/>_reference<sp/>&lt;&lt;<sp/>_complex<sp/>&lt;&lt;<sp/>_comma<sp/>&lt;&lt;<sp/>_complex<sp/>&lt;&lt;<sp/>_comma<sp/>&lt;&lt;<sp/>_complex<sp/>&lt;&lt;<sp/>_comma<sp/>&lt;&lt;<sp/>_complex;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>parse<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ruleptr&gt;<sp/>rules<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{import_,<sp/>label_,<sp/>print_,<sp/>typedecl_,<sp/>application_,<sp/>measurement_,<sp/>reset_};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;qasm::exec::executable*<sp/>(*)(parser::parsetree&amp;)&gt;<sp/>converters</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<ref refid="compiler_8hpp_1af29ea58956d1e519877cf79d81d5f8b8" kindref="member">convert_import</ref>,<sp/><ref refid="compiler_8hpp_1a3a9fc818a308f225f17b30cf26a3f674" kindref="member">convert_anchor</ref>,<sp/><ref refid="compiler_8hpp_1af4b1195ebe9533956bca833f365dccfb" kindref="member">convert_print</ref>,<sp/><ref refid="compiler_8hpp_1a3fadce05c7730406d98ffa5c57beee3a" kindref="member">convert_typedef</ref>,<sp/><ref refid="compiler_8hpp_1aef48a14daa35b8b1ac149d4507745272" kindref="member">convert_gate_application</ref>,<sp/><ref refid="compiler_8hpp_1a68fba8c9d7b383e00bd8786cb4581374" kindref="member">convert_measurement</ref>,<sp/><ref refid="compiler_8hpp_1a9695552da709ab00ce93ec00fa71447b" kindref="member">convert_reset</ref>};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;void(*)(compiler&amp;,<sp/>qasm::exec::executable*)&gt;<sp/>post_events</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<ref refid="compiler_8hpp_1a5f86ad821427272c82f91807bed4ffe0" kindref="member">post_import</ref>,<sp/><ref refid="compiler_8hpp_1a6a17a035bad361ab796fcc69b5e57431" kindref="member">post_anchor</ref>,<sp/><ref refid="compiler_8hpp_1a01ae4a79dc45ca04bac94915f97db422" kindref="member">post_add</ref>,<sp/><ref refid="compiler_8hpp_1a01ae4a79dc45ca04bac94915f97db422" kindref="member">post_add</ref>,<sp/><ref refid="compiler_8hpp_1a01ae4a79dc45ca04bac94915f97db422" kindref="member">post_add</ref>,<sp/><ref refid="compiler_8hpp_1a01ae4a79dc45ca04bac94915f97db422" kindref="member">post_add</ref>,<sp/>post_add};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Begin<sp/>compilation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classprogram" kindref="compound">program</ref><sp/>prog;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqasm_1_1runtime_1_1environment" kindref="compound">qasm::runtime::environment</ref><sp/>env;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcompiler" kindref="compound">compiler</ref><sp/>cmp(tokenizer,<sp/>rules,<sp/>converters,<sp/>post_events,<sp/>prog);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//New</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Run<sp/>in<sp/>file<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arg.arguments.size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Arg<sp/>is<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>filename<sp/>=<sp/>arg.arguments[0];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>cmp.try_parse_file(filename);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!arg.hasFlag(</highlight><highlight class="stringliteral">&quot;-noeval&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>b<sp/>&amp;&amp;<sp/>prog.<ref refid="classprogram_1a827f0b22e21be3ce1e0e568a147488b9" kindref="member">lines</ref>.size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;qasm::exec::executable*&gt;::iterator<sp/>it<sp/>=<sp/>prog.<ref refid="classprogram_1a827f0b22e21be3ce1e0e568a147488b9" kindref="member">lines</ref>.begin();<sp/>it<sp/>!=<sp/>prog.<ref refid="classprogram_1a827f0b22e21be3ce1e0e568a147488b9" kindref="member">lines</ref>.end();<sp/>it++){</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;invoke_rootprogram(env);<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Run<sp/>in<sp/>interactive<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arg.hasFlag(</highlight><highlight class="stringliteral">&quot;-i&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="runtime_2main_8cpp_1a47f2e62c0dbebc787052c165afcada0e" kindref="member">NAME</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>interactive<sp/>mode.<sp/>Type<sp/>`quit`<sp/>to<sp/>exit&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classgraphics_1_1line" kindref="compound">line</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(cin,<sp/>line);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(line<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;quit&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmp.try_parse_line(</highlight><highlight class="stringliteral">&quot;interactive<sp/>terminal&quot;</highlight><highlight class="normal">,<sp/>prog.<ref refid="classprogram_1a827f0b22e21be3ce1e0e568a147488b9" kindref="member">lines</ref>.size(),<sp/>line);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!arg.hasFlag(</highlight><highlight class="stringliteral">&quot;-noeval&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prog.<ref refid="classprogram_1a827f0b22e21be3ce1e0e568a147488b9" kindref="member">lines</ref>[prog.<ref refid="classprogram_1a827f0b22e21be3ce1e0e568a147488b9" kindref="member">lines</ref>.size()<sp/>-<sp/>1]-&gt;invoke_rootprogram(env);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Run<sp/>in<sp/>help<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="runtime_2main_8cpp_1a47f2e62c0dbebc787052c165afcada0e" kindref="member">NAME</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>version:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="runtime_2main_8cpp_1a877cce34f3e58fd7f9194fab90724cb8" kindref="member">MAJOR</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="runtime_2main_8cpp_1a4e10915d93013542d442d78de0e02e9a" kindref="member">MINOR</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="runtime_2main_8cpp_1af59c44c1f3ff875c35393428624473aa" kindref="member">PATCH</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Usage:<sp/>executable<sp/>&lt;filename&gt;<sp/>[options]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Enter<sp/>interactive<sp/>mode<sp/>if<sp/>no<sp/>filename<sp/>is<sp/>supplied.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-svg[=name]<sp/><sp/><sp/><sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Export<sp/>a<sp/>circuit<sp/>diagram<sp/>in<sp/>Scalable<sp/>Vector<sp/>Graphics<sp/>format.<sp/>Default<sp/>name<sp/>is<sp/>&apos;export.svg&apos;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-noeval<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>but<sp/>do<sp/>not<sp/>evaluate<sp/>quantum<sp/>scripts.<sp/>Usually<sp/>used<sp/>with<sp/>-svg.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Old<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if(try_parse_qasm(prog,<sp/>filename,<sp/>tokenizer)){</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(std::vector&lt;qasm::exec::executable*&gt;::iterator<sp/>it<sp/>=<sp/>prog.lines.begin();<sp/>it<sp/>!=<sp/>prog.lines.end();<sp/>it++){</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;invoke_rootprogram(env);<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arg.hasFlag(</highlight><highlight class="stringliteral">&quot;-svg&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;export.svg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arg.hasParameterFor(</highlight><highlight class="stringliteral">&quot;-svg&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ename<sp/>=<sp/>arg.parameters[</highlight><highlight class="stringliteral">&quot;-svg&quot;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.svg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qcircuit__exporter_8hpp_1a24f234ebab94565d8f0b9fd434a512f8" kindref="member">exportQuantumCircuit</ref>(ename,<sp/>prog);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Program<sp/>and<sp/>executable<sp/>lines<sp/>are<sp/>cleaned<sp/>up<sp/>by<sp/>program<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/runtime/main.cpp"/>
  </compounddef>
</doxygen>
